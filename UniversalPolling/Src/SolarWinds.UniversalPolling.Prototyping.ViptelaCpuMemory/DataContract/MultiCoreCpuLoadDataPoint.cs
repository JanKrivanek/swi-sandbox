// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MultiCoreCpuLoadDataPoint.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SolarWinds.UniversalPolling.Prototyping.HwhMonitoringLogic.Protobuf {

  /// <summary>Holder for reflection information generated from MultiCoreCpuLoadDataPoint.proto</summary>
  public static partial class MultiCoreCpuLoadDataPointReflection {

    #region Descriptor
    /// <summary>File descriptor for MultiCoreCpuLoadDataPoint.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MultiCoreCpuLoadDataPointReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9NdWx0aUNvcmVDcHVMb2FkRGF0YVBvaW50LnByb3RvEkNTb2xhcldpbmRz",
            "LlVuaXZlcnNhbFBvbGxpbmcuUHJvdG90eXBpbmcuSHdoTW9uaXRvcmluZ0xv",
            "Z2ljLlByb3RvYnVmIokCChlNdWx0aUNvcmVDcHVMb2FkRGF0YVBvaW50EowB",
            "Cg9DcHVMb2FkUGVySW5kZXgYASADKAsycy5Tb2xhcldpbmRzLlVuaXZlcnNh",
            "bFBvbGxpbmcuUHJvdG90eXBpbmcuSHdoTW9uaXRvcmluZ0xvZ2ljLlByb3Rv",
            "YnVmLk11bHRpQ29yZUNwdUxvYWREYXRhUG9pbnQuQ3B1TG9hZFBlckluZGV4",
            "RW50cnkSDwoHSXNFcnJvchgCIAEoCBIUCgxFcnJvck1lc3NhZ2UYAyABKAka",
            "NgoUQ3B1TG9hZFBlckluZGV4RW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVl",
            "GAIgASgFOgI4AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SolarWinds.UniversalPolling.Prototyping.HwhMonitoringLogic.Protobuf.MultiCoreCpuLoadDataPoint), global::SolarWinds.UniversalPolling.Prototyping.HwhMonitoringLogic.Protobuf.MultiCoreCpuLoadDataPoint.Parser, new[]{ "CpuLoadPerIndex", "IsError", "ErrorMessage" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MultiCoreCpuLoadDataPoint : pb::IMessage<MultiCoreCpuLoadDataPoint> {
    private static readonly pb::MessageParser<MultiCoreCpuLoadDataPoint> _parser = new pb::MessageParser<MultiCoreCpuLoadDataPoint>(() => new MultiCoreCpuLoadDataPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiCoreCpuLoadDataPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SolarWinds.UniversalPolling.Prototyping.HwhMonitoringLogic.Protobuf.MultiCoreCpuLoadDataPointReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCoreCpuLoadDataPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCoreCpuLoadDataPoint(MultiCoreCpuLoadDataPoint other) : this() {
      cpuLoadPerIndex_ = other.cpuLoadPerIndex_.Clone();
      isError_ = other.isError_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCoreCpuLoadDataPoint Clone() {
      return new MultiCoreCpuLoadDataPoint(this);
    }

    /// <summary>Field number for the "CpuLoadPerIndex" field.</summary>
    public const int CpuLoadPerIndexFieldNumber = 1;
    private static readonly pbc::MapField<int, int>.Codec _map_cpuLoadPerIndex_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 10);
    private readonly pbc::MapField<int, int> cpuLoadPerIndex_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> CpuLoadPerIndex {
      get { return cpuLoadPerIndex_; }
    }

    /// <summary>Field number for the "IsError" field.</summary>
    public const int IsErrorFieldNumber = 2;
    private bool isError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsError {
      get { return isError_; }
      set {
        isError_ = value;
      }
    }

    /// <summary>Field number for the "ErrorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 3;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiCoreCpuLoadDataPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiCoreCpuLoadDataPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!CpuLoadPerIndex.Equals(other.CpuLoadPerIndex)) return false;
      if (IsError != other.IsError) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= CpuLoadPerIndex.GetHashCode();
      if (IsError != false) hash ^= IsError.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cpuLoadPerIndex_.WriteTo(output, _map_cpuLoadPerIndex_codec);
      if (IsError != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsError);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cpuLoadPerIndex_.CalculateSize(_map_cpuLoadPerIndex_codec);
      if (IsError != false) {
        size += 1 + 1;
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiCoreCpuLoadDataPoint other) {
      if (other == null) {
        return;
      }
      cpuLoadPerIndex_.Add(other.cpuLoadPerIndex_);
      if (other.IsError != false) {
        IsError = other.IsError;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cpuLoadPerIndex_.AddEntriesFrom(input, _map_cpuLoadPerIndex_codec);
            break;
          }
          case 16: {
            IsError = input.ReadBool();
            break;
          }
          case 26: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
