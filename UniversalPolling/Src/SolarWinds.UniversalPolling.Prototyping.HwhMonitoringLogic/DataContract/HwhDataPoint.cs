// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: HwhDataPoint.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SolarWinds.UniversalPolling.Prototyping.HwhMonitoringLogic.Protobuf {

  /// <summary>Holder for reflection information generated from HwhDataPoint.proto</summary>
  public static partial class HwhDataPointReflection {

    #region Descriptor
    /// <summary>File descriptor for HwhDataPoint.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HwhDataPointReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJId2hEYXRhUG9pbnQucHJvdG8SQ1NvbGFyV2luZHMuVW5pdmVyc2FsUG9s",
            "bGluZy5Qcm90b3R5cGluZy5Id2hNb25pdG9yaW5nTG9naWMuUHJvdG9idWYi",
            "NAoOTXlId2hEYXRhUG9pbnQSEAoIVmFsdWVJbnQYASABKAUSEAoIVmFsdWVT",
            "dHIYAiABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SolarWinds.UniversalPolling.Prototyping.HwhMonitoringLogic.Protobuf.MyHwhDataPoint), global::SolarWinds.UniversalPolling.Prototyping.HwhMonitoringLogic.Protobuf.MyHwhDataPoint.Parser, new[]{ "ValueInt", "ValueStr" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MyHwhDataPoint : pb::IMessage<MyHwhDataPoint> {
    private static readonly pb::MessageParser<MyHwhDataPoint> _parser = new pb::MessageParser<MyHwhDataPoint>(() => new MyHwhDataPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MyHwhDataPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SolarWinds.UniversalPolling.Prototyping.HwhMonitoringLogic.Protobuf.HwhDataPointReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyHwhDataPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyHwhDataPoint(MyHwhDataPoint other) : this() {
      valueInt_ = other.valueInt_;
      valueStr_ = other.valueStr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyHwhDataPoint Clone() {
      return new MyHwhDataPoint(this);
    }

    /// <summary>Field number for the "ValueInt" field.</summary>
    public const int ValueIntFieldNumber = 1;
    private int valueInt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ValueInt {
      get { return valueInt_; }
      set {
        valueInt_ = value;
      }
    }

    /// <summary>Field number for the "ValueStr" field.</summary>
    public const int ValueStrFieldNumber = 2;
    private string valueStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueStr {
      get { return valueStr_; }
      set {
        valueStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MyHwhDataPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MyHwhDataPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValueInt != other.ValueInt) return false;
      if (ValueStr != other.ValueStr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValueInt != 0) hash ^= ValueInt.GetHashCode();
      if (ValueStr.Length != 0) hash ^= ValueStr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ValueInt != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ValueInt);
      }
      if (ValueStr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValueStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValueInt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValueInt);
      }
      if (ValueStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueStr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MyHwhDataPoint other) {
      if (other == null) {
        return;
      }
      if (other.ValueInt != 0) {
        ValueInt = other.ValueInt;
      }
      if (other.ValueStr.Length != 0) {
        ValueStr = other.ValueStr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ValueInt = input.ReadInt32();
            break;
          }
          case 18: {
            ValueStr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
